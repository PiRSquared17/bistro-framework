<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>260, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA8
        DQAAAk1TRnQBSQFMAgEBBgEAAQkBAAEEAQABEAEAARABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABQAMAASADAAEBAQABCAYAAQgYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAD4sBrhD/IAABZQGL
        DK0CixD/IAABZQG0BNwBuwG0BtwBrQGLEP8gAAFlAbQE3AKLBtwCixD/IAABZQW0AbsBtQGLBbQCiwX/
        AgAD/wIABP8gAAFlBbQBuwEJAbUBiwS0AosF/wIAAv8CAAX/IAABhgGtBbQBtQH/AZEBiwO0AosF/wIA
        Af8CAAb/IAAHiwG0Av8BuwWLBf8FAAb/IAAIiwH/AbUFiwGuBf8CAAL/AgAF/yAABosBrgK1BosBkQX/
        AgAC/wIABf8gAAGzAYsEZQGRAbUGZQGLAbQF/wIAAv8CAAX/IAABtAGLDGUBiwG1Bf8FAAb/IAABtAGL
        DGUBiwG7EP8gAAHcAYsMZQGLAQkQ/yAAAdwNiwG0AQkQ/yAAD9wBCRD/KAACDgYAAvQBGwHCB/QB8wHC
        AfMB9AHzAQABEwwPAesCAA4QBgABDwEAAQ8CdAEPAQABDwMAAv8BGwKfAfYE/wEbAp8B9gH/AfQBQwFK
        AUsCUQZLA0oBRAHqARAB/wKgC3kBEAQAAREBdAERAQACegEAAREBdAERAgAC/wHCAX4BXAGfAcMC9gHC
        AX4BXAGfAfYB/wH0AQABSwF0AnoBeQJ0BFIBUQFLAkMBEAH/A6ABmQF5AhAGeQEQAwABQwF0AXoCbgJ6
        BHQBQwEAAv8B9AGfATkBOgF9AsIBXAE6AVwBwgH2Af8B9AEAAUsBeQN6AXkCdARSAUsCQwEAARAB/wOg
        AZkCEAV5ARABAAMUAQABFQN6AZoBwwF0AXoBkwEVAe0BAAL/AfYBwgI6A1wCOgFcAfYC/wH0AQABSwF5
        AZoCegF5AnQEUgFLAkMBAAEQAf8EoAOZBHkBEAIAAe0B7AIAAZMBegF0AesB7AEaAXoBkwEAARIBAAP/
        ARsBXAE6BDkBXAF+A/8B9AEAAUsBmQHDAnoBeQJ0BFIBSwJDAgABEAH/BKAEmQF5ARADAAHyAeoCSwGZ
        AXoBbgLsAe0BGgGTAUoBEgHqAv8B9gHCAVwBOgQ5AVwBfgH2Av8B9AEAAVEBmQEaAnoBeQJ0BFIBSwEV
        AUMCAAEQAf8DoAIQBJkBEAMAAfMBAAMaAXQBFAGZAe8BFAHDAXQBeQGTAQAC/wEbAX4COgQ5AToBXAGf
        AfYB/wH0AQAB7wGZBXQEeQF0AVIBRAFDAwABEAH/AcMBoAIQAaACmQEQBAAB9AESAu0BGgF5AW4C7AFu
        AZoBkwJLAeoB9gGfAX0BXAE6BjkBOgFcAX4BwgH0AQcCFANtARQCDgESA20BEQFtAQcDAAEQAf8CwwIQ
        AqABmQEQBAAB9AEHARIBAAGZAZoBmQFtAW4BkwF6ARwDAAGfAX0DXAI6AjkBOgRcAX4BwgEAAe8B6gEV
        AfcBFQHqApIBFQETAeoBDwHsAQcFAAEQAf8BwwIQARoBoAEQBQAB9AEHAe0BEgGaAhoBmQSaARUCAAGf
        BH4CXAI5AVwBfQR+AZ8CAAFtAUMBBwESAewCvAISAeoBAAGSBgABEAH/AcMCEAHDARoBEAUAAQcB7QFD
        AQcBmgEcAZoCGgGaAQcBGgF0AgAF/wHCAX0COQGfARsE/wH0AgABbQFDAQcBbQHsArwDbQEAAZIHAAEQ
        Af8DwwEQBQACEQEAAfABEQG8AREB7AH2ARoB7AEQAbwBEAIABf8B9gF+AjoBwgH2BP8B9AIAAW0BFQHx
        AesB7AKSA20BAAGSBwABEAH/AvYBGwEQCAAB8gH0AQ8B9AEPAvABAAEcAQABHAIABv8BnwJcARsF/wH0
        AgABbQEUAf8B7wHsAm0B6wHsAW0BAAGSCAABEAH/AfYBEAkAAvAB8QLwBw4BAAb/AcICfgEbBf8B9AIA
        AesBEwLxAQcB7wEcAfcBkgHsAQ8B9wgAARAB/wH2ARAWAAb/ARsCwgH2Bf8B9AMAAZIHAAFDCwACEAcA
        AUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/+BAAH/AT8CAAGAAQEBgAEBAfoBFwYA
        AfABAwYAAeABAQQAAYABAQEAAQEEAAGAAQEBAAEBBAABwAEDBgABwAEDBgAB4AEHBgAB4AEHAQABAQIA
        AYABAQHwAQ8BAAEBAgABwAEDAfABDwEAAQECAAHAAQMB+AEfAQABAQIAAcABAwH4AR8BwAEBAgABwAED
        AfwBPwHAAQECAAHAAQMB/AE/AcAB/wIAAeABDwH+AX8L
</value>
  </data>
</root>